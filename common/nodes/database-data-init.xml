<stack:stack>

	<stack:copyright>
	Copyright (c) 2006 - 2019 Teradata
	All rights reserved. Stacki(r) v5.x stacki.com
	https://github.com/Teradata/stacki/blob/master/LICENSE.txt
	</stack:copyright>

	<stack:rocks>
	Copyright (c) 2000 - 2010 The Regents of the University of California
	All rights reserved. Rocks(r) v5.4 www.rocksclusters.org
	https://github.com/Teradata/stacki/blob/master/LICENSE-ROCKS.txt
	</stack:rocks>


<stack:script stack:chroot="false" stack:stage="install-post" stack:cond="os == 'redhat'">
cp /tmp/site.attrs /mnt/sysimage/tmp
chmod 400 /mnt/sysimage/tmp/site.attrs
cp /tmp/rolls.xml /mnt/sysimage/tmp
</stack:script>

<stack:script stack:stage="install-post" stack:shell="/opt/stack/bin/python3">
import os.path

attr   = []
shadow = []
if os.path.exists('/tmp/site.attrs'):
	with open('/tmp/site.attrs', 'r') as file:
		for line in file.readlines():
			try:
				key, value = line.split(':', 1)
			except:
				continue

			key   = key.strip()
			value = value.strip()

			if key in ['hostname', 'rack', 'rank', 'os', 
				   'nukedisks', 'nukecontroller']:
				continue

			if key in ['Kickstart_PrivatePortableRootPassword',
				   'Kickstart_PrivateRootPassword',
				   'Kickstart_PrivateDjangoRootPassword']:
				shadow.append({key:value})
			else:
				attr.append({key:value})

with open('/tmp/site.yaml', 'w') as file:
	file.write('attr:\n')
	for k,v in attr:
		file.write(f'- {k}:{v}\n')
	file.write('- shadow\n')
	for k,v in shadow:
		file.write(f'- {k}:{v}\n')
</stack:script>

<stack:script stack:stage="install-post">

<stack:file stack:name="/tmp/dump-core.yaml">
access:
- command: '*'
  group: apache
- command: list*
  group: wheel
attr:
- sync.ssh.authkey: true
- ssh.use_dns: true
- discovery.base.rack: '0'
- discovery.base.rank: '0'
- os: &os;
- firewall: true
network:
- name: private
  address: &Kickstart_PrivateNetwork;
  mask: &Kickstart_PrivateNetmask;
  gateway: &Kickstart_PrivateGateway;
  zone: &Kickstart_PrivateDNSDomain;
  dns: false
  pxe: true
route:
- address: 224.0.0.0
  netmask: 255.255.255.0
  subnet: private
- address: 255.255.255.255
  netmask: 255.255.255.255
  subnet:  private
bootaction:
- name: default
  type: os
  kernel: com32 chain.c32
  args: hd0
- name: pxeflash
  type: os
  kernel: kernel memdisk bigraw
  ramdisk: pxeflash.img
  args: keeppxe
- name: localboot
  type: os
  kernel: localboot 0
- name: hplocalboot
  type: os
  kernel: localboot -1
- name: memtest
  type: os
  kernel: kernel memtest
software:
  box:
  - name: frontend
  - name: default
appliance
- name: frontend
  box: frontend
  public: false
  attr: 
    - node: server
    - kickstartable: true
    - managed: false
- name: builder
  public: false
  attr:
    - node: builder
    - kickstartable: true
    - managed: true
- name: barnacle
  public: false
  attr:
    - node: barnacle
    - kickstartable: true
    - managed: true
- name: switch
  public: false
  attr:
    - kickstartable: false
    - managed: false
- name: backend
  public: true
  attr:
    - node: backend
    - kickstartable: true
    - managed: true
- name: replicant
  public: true
  attr:
    - node: replicant
    - kickstartable: true
    - managed: true
    - const_overwrite: false
</stack:file>

/opt/stack/bin/stack load /tmp/site.yaml | sh
/opt/stack/bin/stack load /tmp/dump-core.yaml | sh

</stack:script>


</stack:stack>
